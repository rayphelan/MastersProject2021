(module
 (type $none_=>_none (func))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_=>_f64 (func (param i32 i32) (result f64)))
 (type $i32_i32_i32_i32_=>_f64 (func (param i32 i32 i32 i32) (result f64)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 25948))
 (memory $0 1)
 (data (i32.const 1036) "\\\1f")
 (data (i32.const 1052) "@\1f")
 (data (i32.const 1070) "\f0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\08@\00\00\00\00\00\00\10@\00\00\00\00\00\00\14@\00\00\00\00\00\00\18@\00\00\00\00\00\00\1cc0P@\00\00\00\00\00\00Q@\00\00\00\00\00@Q@\00\00\00\00\00\80Q@\00\00\00\00\00\c0Q@\00\00\00\00\00\00R@\00\00\00\00\00@R@\00\00\00\00\00\80R@\00\00\00\00\00\c0R@\00\00\00\00\00\00S@\00\00\00\00\00@S@\00\00\00\00\00\80S@\00\00\00\00\00\c0S@\00\00\00\00\00\00T@\00\00\00\00\00@T@\00\00\00\00\00\80T@\00\00\00\00\00\c0T@\00\00\00\00\00\00U@\00\00\00\00\00@U@\00\00\00\00\00\80U@\00\00\00\00\00\c0U@\00\00\00\00\00\00V@\00\00\00\00\00@V@\00\00\00\00\00\80V@\00\00\00\00\00\c0V@\00\00\00\00\00\00W@\00\00\00\00\00@W@\00\00\00\00\00\80W@\00\00\00\00\00\c0W@\00\00\00\00\00\00X@\00\00\00\00\00@X@\00\00\00\00\00\80X@\00\00\00\00\00\c0X@\00\00\00\00\00\00Y@\00\00\00\00\00@Y@\00\00\00\00\00\80Y@\00\00\00\00\00\c0Y@\00\00\00\00\00\00Z@\00\00\00\00\00@Z@\00\00\00\00\00\80Z@\00\00\00\00\00\c0Z@\00\00\00\00\00\00[@\00\00\00\00\00@[@\00\00\00\00\00\80[@\00\00\00\00\00\c0[@\00\00\00\00\00\00\\@\00\00\00\00\00@\\@\00\00\00\00\00\80\\@\00\00\00\00\00\c0\\@\00\00\00\00\00\00]@\00\00\00\00\00@]@\00\00\00\00\00\80]@\00\00\00\00\00\c0]@\00\00\00\00\00\00^@\00\00\00\00\00@^@\00\00\00\00\00\80^@\00\00\00\00\00\c0^@\00\00\00\00\00\00_@\00\00\00\00\00@_@\00\00\00\00\00\80_@\00\00\00\00\00\c0_@\00\00\00\00\00\00`@\00\00\00\00\00 `@\00\00\00\00\00@`@\00\00\00\00\00``@\00\00\00\00\00\80`@\00\00\00\00\00\a0`@\00\00\00\00\00\c0`@\00\00\00\00\00\e0`@\00\00\00\00\00\00a@\00\00\00\00\00 a@\00\00\00\00\00@a@\00\00\00\00\00`a@\00\00\00\00\00\80a@\00\00\00\00\00\a0a@\00\00\00\00\00\c0a@\00\00\00\00\00\e0a@\00\00\00\00\00\00b@\00\00\00\00\00 b@\00\00\00\00\00@b@\00\00\00\00\00`b@\00\00\00\00\00\80b@\00\00\00\00\00\a0b@\00\00\00\00\00\c0b@\00\00\00\00\00\e0b@\00\00\00\00\00\00c@\00\00\00\00\00 c@\00\00\00\00\00@c@\00\00\00\00\00`c@\00\00\00\00\00\80c@\00\00\00\00\00\a0c@\00\00\00\00\00\c0c@\00\00\00\00\00\e0c@\00\00\00\00\00\00d@\00\00\00\00\00 d@\00\00\00\00\00@d@\00\00\00\00\00`d@\00\00\00\00\00\80d@\00\00\00\00\00\a0d@\00\00\00\00\00\c0d@\00\00\00\00\00\e0d@\00\00\00\00\00\00e@\00\00\00\00\00 e@\00\00\00\00\00@e@\00\00\00\00\00`e@\00\00\00\00\00\80e@\00\00\00\00\00\a0e@\00\00\00\00\00\c0e@\00\00\00\00\00\e0e@\00\00\00\00\00\00f@\00\00\00\00\00 f@\00\00\00\00\00@f@\00\00\00\00\00`f@\00\00\00\00\00\80f@\00\00\00\00\00\a0f@\00\00\00\00\00\c0f@\00\00\00\00\00\e0f@\00\00\00\00\00\00g@\00\00\00\00\00 g@\00\00\00\00\00@g@\00\00\00\00\00`g@\00\00\00\00\00\80g@\00\00\00\00\00\a0g@\00\00\00\00\00\c0g@\00\00\00\00\00\e0g@\00\00\00\00\00\00h@\00\00\00\00\00 h@\00\00\00\00\00@h@\00\00\00\00\00`h@\00\00\00\00\00\80h@\00\00\00\00\00\a0h@\00\00\00\00\00\c0h@\00\00\00\00\00\e0h@\00\00\00\00\00\00i@\00\00\00\00\00 i@\00\00\00\00\00@i@\00\00\00\00\00`i@\00\00\00\00\00\80i@\00\00\00\00\00\a0i@\00\00\00\00\00\c0i@\00\00\00\00\00\e0i@\00\00\00\00\00\00j@\00\00\00\00\00 j@\00\00\00\00\00@j@\00\00\00\00\00`j@\00\00\00\00\00\80j@\00\00\00\00\00\a0j@\00\00\00\00\00\c0j@\00\00\00\00\00\e0j@\00\00\00\00\00\00k@\00\00\00\00\00 k@\00\00\00\00\00@k@\00\00\00\00\00`k@\00\00\00\00\00\80k@\00\00\00\00\00\a0k@\00\00\00\00\00\c0k@\00\00\00\00\00\e0k@\00\00\00\00\00\00l@\00\00\00\00\00 l@\00\00\00\00\00@l@\00\00\00\00\00`l@\00\00\00\00\00\80l@\00\00\00\00\00\a0l@\00\00\00\00\00\c0l@\00\00\00\00\00\e0l@\00\00\00\00\00\00m@\00\00\00\00\00 m@\00\00\00\00\00@m@\00\00\00\00\00`m@\00\00\00\00\00\80m@\00\00\00\00\00\a0m@\00\00\00\00\00\c0m@\00\00\00\00\00\e0m@\00\00\00\00\00\00n@\00\00\00\00\00 n@\00\00\00\00\00@n@\00\00\00\00\00`n@\00\00\00\00\00\80n@\00\00\00\00\00\a0n@\00\00\00\00\00\c0n@\00\00\00\00\00\e0n@\00\00\00\00\00\00o@\00\00\00\00\00 o@\00\00\00\00\00@o@\00\00\00\00\00`o@\00\00\00\00\00\80o@\00\00\00\00\00\a0o@\00\00\00\00\00\c0o@\00\00\00\00\00\e0o@\00\00\00\00\00\00p@\00\00\00\00\00\10p@\00\00\00\00\00 p@\00\00\00\00\000p@\00\00\00\00\00@p@\00\00\00\00\00Pp@\00\00\00\00\00`p@\00\00\00\00\00pp@\00\00\00\00\00\80p@\00\00\00\00\00\90p@\00\00\00\00\00\a0p@\00\00\00\00\00\b0p@\00\00\00\00\00\c0p@\00\00\00\00\00\d0p@\00\00\00\00\00\e0p@\00\00\00\00\00\f0p@\00\00\00\00\00\00q@\00\00\00\00\00\10q@\00\00\00\00\00 q@\00\00\00\00\000q@\00\00\00\00\00@q@\00\00\00\00\00Pq@\00\00\00\00\00`q@\00\00\00\00\00pq@\00\00\00\00\00\80q@\00\00\00\00\00\90q@\00\00\00\00\00\a0q@\00\00\00\00\00\b0q@\00\00\00\00\00\c0q@\00\00\00\00\00\d0q@\00\00\00\00\00\e0q@\00\00\00\00\00\f0q@\00\00\00\00\00\00r@\00\00\00\00\00\10r@\00\00\00\00\00 r@\00\00\00\00\000r@\00\00\00\00\00@r@\00\00\00\00\00Pr@\00\00\00\00\00`r@\00\00\00\00\00pr@\00\00\00\00\00\80r@\00\00\00\00\00\90r@\00\00\00\00\00\a0r@\00\00\00\00\00\b0r@\00\00\00\00\00\c0r@\00\00\00\00\00\d0r@\00\00\00\00\00\e0r@\00\00\00\00\00\f0r@\00\00\00\00\00\00s@\00\00\00\00\00\10s@\00\00\00\00\00 s@\00\00\00\00\000s@\00\00\00\00\00@s@\00\00\00\00\00Ps@\00\00\00\00\00`s@\00\00\00\00\00ps@\00\00\00\00\00\80s@\00\00\00\00\00\90s@\00\00\00\00\00\a0s@\00\00\00\00\00\b0s@\00\00\00\00\00\c0s@\00\00\00\00\00\d0s@\00\00\00\00\00\e0s@\00\00\00\00\00\f0s@\00\00\00\00\00\00t@\00\00\00\00\00\10t@\00\00\00\00\00 t@\00\00\00\00\000t@\00\00\00\00\00@t@\00\00\00\00\00Pt@\00\00\00\00\00`t@\00\00\00\00\00pt@\00\00\00\00\00\80t@\00\00\00\00\00\90t@\00\00\00\00\00\a0t@\00\00\00\00\00\b0t@\00\00\00\00\00\c0t@\00\00\00\00\00\d0t@\00\00\00\00\00\e0t@\00\00\00\00\00\f0t@\00\00\00\00\00\00u@\00\00\00\00\00\10u@\00\00\00\00\00 u@\00\00\00\00\000u@\00\00\00\00\00@u@\00\00\00\00\00Pu@\00\00\00\00\00`u@\00\00\00\00\00pu@\00\00\00\00\00\80u@\00\00\00\00\00\90u@\00\00\00\00\00\a0u@\00\00\00\00\00\b0u@\00\00\00\00\00\c0u@\00\00\00\00\00\d0u@\00\00\00\00\00\e0u@\00\00\00\00\00\f0u@\00\00\00\00\00\00v@\00\00\00\00\00\10v@\00\00\00\00\00 v@\00\00\00\00\000v@\00\00\00\00\00@v@\00\00\00\00\00Pv@\00\00\00\00\00`v@\00\00\00\00\00pv@\00\00\00\00\00\80v@\00\00\00\00\00\90v@\00\00\00\00\00\a0v@\00\00\00\00\00\b0v@\00\00\00\00\00\c0v@\00\00\00\00\00\d0v@\00\00\00\00\00\e0v@\00\00\00\00\00\f0v@\00\00\00\00\00\00w@\00\00\00\00\00\10w@\00\00\00\00\00 w@\00\00\00\00\000w@\00\00\00\00\00@w@\00\00\00\00\00Pw@\00\00\00\00\00`w@\00\00\00\00\00pw@\00\00\00\00\00\80w@\00\00\00\00\00\90w@\00\00\00\00\00\a0w@\00\00\00\00\00\b0w@\00\00\00\00\00\c0w@\00\00\00\00\00\d0w@\00\00\00\00\00\e0w@\00\00\00\00\00\f0w@\00\00\00\00\00\00x@\00\00\00\00\00\10x@\00\00\00\00\00 x@\00\00\00\00\000x@\00\00\00\00\00@x@\00\00\00\00\00Px@\00\00\00\00\00`x@\00\00\00\00\00px@\00\00\00\00\00\80x@\00\00\00\00\00\90x@\00\00\00\00\00\a0x@\00\00\00\00\00\b0x@\00\00\00\00\00\c0x@\00\00\00\00\00\d0x@\00\00\00\00\00\e0x@\00\00\00\00\00\f0x@\00\00\00\00\00\00y@\00\00\00\00\00\10y@\00\00\00\00\00 y@\00\00\00\00\000y@\00\00\00\00\00@y@\00\00\00\00\00Py@\00\00\00\00\00`y@\00\00\00\00\00py@\00\00\00\00\00\80y@\00\00\00\00\00\90y@\00\00\00\00\00\a0y@\00\00\00\00\00\b0y@\00\00\00\00\00\c0y@\00\00\00\00\00\d0y@\00\00\00\00\00\e0y@\00\00\00\00\00\f0y@\00\00\00\00\00\00z@\00\00\00\00\00\10z@\00\00\00\00\00 z@\00\00\00\00\000z@\00\00\00\00\00@z@\00\00\00\00\00Pz@\00\00\00\00\00`z@\00\00\00\00\00pz@\00\00\00\00\00\80z@\00\00\00\00\00\90z@\00\00\00\00\00\a0z@\00\00\00\00\00\b0z@\00\00\00\00\00\c0z@\00\00\00\00\00\d0z@\00\00\00\00\00\e0z@\00\00\00\00\00\f0z@\00\00\00\00\00\00{@\00\00\00\00\00\10{@\00\00\00\00\00 {@\00\00\00\00\000{@\00\00\00\00\00@{@\00\00\00\00\00P{@\00\00\00\00\00`{@\00\00\00\00\00p{@\00\00\00\00\00\80{@\00\00\00\00\00\90{@\00\00\00\00\00\a0{@\00\00\00\00\00\b0{@\00\00\00\00\00\c0{@\00\00\00\00\00\d0{@\00\00\00\00\00\e0{@\00\00\00\00\00\f0{@\00\00\00\00\00\00|@\00\00\00\00\00\10|@\00\00\00\00\00 |@\00\00\00\00\000|@\00\00\00\00\00@|@\00\00\00\00\00P|@\00\00\00\00\00`|@\00\00\00\00\00p|@\00\00\00\00\00\80|@\00\00\00\00\00\90|@\00\00\00\00\00\a0|@\00\00\00\00\00\b0|@\00\00\00\00\00\c0|@\00\00\00\00\00\d0|@\00\00\00\00\00\e0|@\00\00\00\00\00\f0|@\00\00\00\00\00\00}@\00\00\00\00\00\10}@\00\00\00\00\00 }@\00\00\00\00\000}@\00\00\00\00\00@}@\00\00\00\00\00P}@\00\00\00\00\00`}@\00\00\00\00\00p}@\00\00\00\00\00\80}@\00\00\00\00\00\90}@\00\00\00\00\00\a0}@\00\00\00\00\00\b0}@\00\00\00\00\00\c0}@\00\00\00\00\00\d0}@\00\00\00\00\00\e0}@\00\00\00\00\00\f0}@\00\00\00\00\00\00~@\00\00\00\00\00\10~@\00\00\00\00\00 ~@\00\00\00\00\000~@\00\00\00\00\00@~@\00\00\00\00\00P~@\00\00\00\00\00`~@\00\00\00\00\00p~@\00\00\00\00\00\80~@\00\00\00\00\00\90~@\00\00\00\00\00\a0~@\00\00\00\00\00\b0~@\00\00\00\00\00\c0~@\00\00\00\00\00\d0~@\00\00\00\00\00\e0~@\00\00\00\00\00\f0~@\00\00\00\00\00\00\7f@\00\00\00\00\00\10\7f@\00\00\00\00\00 \7f@\00\00\00\00\000\7f@\00\00\00\00\00@\7f@\00\00\00\00\00P\7f@\00\00\00\00\00`\7f@\00\00\00\00\00p\7f@\00\00\00\00\00\80\7f@\00\00\00\00\00\90\7f@\00\00\00\00\00\a0\7f@\00\00\00\00\00\b0\7f@\00\00\00\00\00\c0\7f@\00\00\00\00\00\d0\7f@\00\00\00\00\00\e0\7f@\00\00\00\00\00\f0\7f@\00\00\00\00\00\00\80@\00\00\00\00\00\08\80@\00\00\00\00\00\10\80@\00\00\00\00\00\18\80@\00\00\00\00\00 \80@\00\00\00\00\00(\80@\00\00\00\00\000\80@\00\00\00\00\008\80@\00\00\00\00\00@\80@\00\00\00\00\00H\80@\00\00\00\00\00P\80@\00\00\00\00\00X\80@\00\00\00\00\00`\80@\00\00\00\00\00h\80@\00\00\00\00\00p\80@\00\00\00\00\00x\80@\00\00\00\00\00\80\80@\00\00\00\00\00\88\80@\00\00\00\00\00\90\80@\00\00\00\00\00\98\80@\00\00\00\00\00\a0\80@\00\00\00\00\00\a8\80@\00\00\00\00\00\b0\80@\00\00\00\00\00\b8\80@\00\00\00\00\00\c0\80@\00\00\00\00\00\c8\80@\00\00\00\00\00\d0\80@\00\00\00\00\00\d8\80@\00\00\00\00\00\e0\80@\00\00\00\00\00\e8\80@\00\00\00\00\00\f0\80@\00\00\00\00\00\f8\80@\00\00\00\00\00\00\81@\00\00\00\00\00\08\81@\00\00\00\00\00\10\81@\00\00\00\00\00\18\81@\00\00\00\00\00 \81@\00\00\00\00\00(\81@\00\00\00\00\000\81@\00\00\00\00\008\81@\00\00\00\00\00@\81@\00\00\00\00\00H\81@\00\00\00\00\00P\81@\00\00\00\00\00X\81@\00\00\00\00\00`\81@\00\00\00\00\00h\81@\00\00\00\00\00p\81@\00\00\00\00\00x\81@\00\00\00\00\00\80\81@\00\00\00\00\00\88\81@\00\00\00\00\00\90\81@\00\00\00\00\00\98\81@\00\00\00\00\00\a0\81@\00\00\00\00\00\a8\81@\00\00\00\00\00\b0\81@\00\00\00\00\00\b8\81@\00\00\00\00\00\c0\81@\00\00\00\00\00\c8\81@\00\00\00\00\00\d0\81@\00\00\00\00\00\d8\81@\00\00\00\00\00\e0\81@\00\00\00\00\00\e8\81@\00\00\00\00\00\f0\81@\00\00\00\00\00\f8\81@\00\00\00\00\00\00\82@\00\00\00\00\00\08\82@\00\00\00\00\00\10\82@\00\00\00\00\00\18\82@\00\00\00\00\00 \82@\00\00\00\00\00(\82@\00\00\00\00\000\82@\00\00\00\00\008\82@\00\00\00\00\00@\82@\00\00\00\00\00H\82@\00\00\00\00\00P\82@\00\00\00\00\00X\82@\00\00\00\00\00`\82@\00\00\00\00\00h\82@\00\00\00\00\00p\82@\00\00\00\00\00x\82@\00\00\00\00\00\80\82@\00\00\00\00\00\88\82@\00\00\00\00\00\90\82@\00\00\00\00\00\98\82@\00\00\00\00\00\a0\82@\00\00\00\00\00\a8\82@\00\00\00\00\00\b0\82@\00\00\00\00\00\b8\82@\00\00\00\00\00\c0\82@\00\00\00\00\00\c8\82@\00\00\00\00\00\d0\82@\00\00\00\00\00\d8\82@\00\00\00\00\00\e0\82@\00\00\00\00\00\e8\82@\00\00\00\00\00\f0\82@\00\00\00\00\00\f8\82@\00\00\00\00\00\00\83@\00\00\00\00\00\08\83@\00\00\00\00\00\10\83@\00\00\00\00\00\18\83@\00\00\00\00\00 \83@\00\00\00\00\00(\83@\00\00\00\00\000\83@\00\00\00\00\008\83@\00\00\00\00\00@\83@\00\00\00\00\00H\83@\00\00\00\00\00P\83@\00\00\00\00\00X\83@\00\00\00\00\00`\83@\00\00\00\00\00h\83@\00\00\00\00\00p\83@\00\00\00\00\00x\83@\00\00\00\00\00\80\83@\00\00\00\00\00\88\83@\00\00\00\00\00\90\83@\00\00\00\00\00\98\83@\00\00\00\00\00\a0\83@\00\00\00\00\00\a8\83@\00\00\00\00\00\b0\83@\00\00\00\00\00\b8\83@\00\00\00\00\00\c0\83@\00\00\00\00\00\c8\83@\00\00\00\00\00\d0\83@\00\00\00\00\00\d8\83@\00\00\00\00\00\e0\83@\00\00\00\00\00\e8\83@\00\00\00\00\00\f0\83@\00\00\00\00\00\f8\83@\00\00\00\00\00\00\84@\00\00\00\00\00\08\84@\00\00\00\00\00\10\84@\00\00\00\00\00\18\84@\00\00\00\00\00 \84@\00\00\00\00\00(\84@\00\00\00\00\000\84@\00\00\00\00\008\84@\00\00\00\00\00@\84@\00\00\00\00\00H\84@\00\00\00\00\00P\84@\00\00\00\00\00X\84@\00\00\00\00\00`\84@\00\00\00\00\00h\84@\00\00\00\00\00p\84@\00\00\00\00\00x\84@\00\00\00\00\00\80\84@\00\00\00\00\00\88\84@\00\00\00\00\00\90\84@\00\00\00\00\00\98\84@\00\00\00\00\00\a0\84@\00\00\00\00\00\a8\84@\00\00\00\00\00\b0\84@\00\00\00\00\00\b8\84@\00\00\00\00\00\c0\84@\00\00\00\00\00\c8\84@\00\00\00\00\00\d0\84@\00\00\00\00\00\d8\84@\00\00\00\00\00\e0\84@\00\00\00\00\00\e8\84@\00\00\00\00\00\f0\84@\00\00\00\00\00\f8\84@\00\00\00\00\00\00\85@\00\00\00\00\00\08\85@\00\00\00\00\00\10\85@\00\00\00\00\00\18\85@\00\00\00\00\00 \85@\00\00\00\00\00(\85@\00\00\00\00\000\85@\00\00\00\00\008\85@\00\00\00\00\00@\85@\00\00\00\00\00H\85@\00\00\00\00\00P\85@\00\00\00\00\00X\85@\00\00\00\00\00`\85@\00\00\00\00\00h\85@\00\00\00\00\00p\85@\00\00\00\00\00x\85@\00\00\00\00\00\80\85@\00\00\00\00\00\88\85@\00\00\00\00\00\90\85@\00\00\00\00\00\98\85@\00\00\00\00\00\a0\85@\00\00\00\00\00\a8\85@\00\00\00\00\00\b0\85@\00\00\00\00\00\b8\85@\00\00\00\00\00\c0\85@\00\00\00\00\00\c8\85@\00\00\00\00\00\d0\85@\00\00\00\00\00\d8\85@\00\00\00\00\00\e0\85@\00\00\00\00\00\e8\85@\00\00\00\00\00\f0\85@\00\00\00\00\00\f8\85@\00\00\00\00\00\00\86@\00\00\00\00\00\08\86@\00\00\00\00\00\10\86@\00\00\00\00\00\18\86@\00\00\00\00\00 \86@\00\00\00\00\00(\86@\00\00\00\00\000\86@\00\00\00\00\008\86@\00\00\00\00\00@\86@\00\00\00\00\00H\86@\00\00\00\00\00P\86@\00\00\00\00\00X\86@\00\00\00\00\00`\86@\00\00\00\00\00h\86@\00\00\00\00\00p\86@\00\00\00\00\00x\86@\00\00\00\00\00\80\86@\00\00\00\00\00\88\86@\00\00\00\00\00\90\86@\00\00\00\00\00\98\86@\00\00\00\00\00\a0\86@\00\00\00\00\00\a8\86@\00\00\00\00\00\b0\86@\00\00\00\00\00\b8\86@\00\00\00\00\00\c0\86@\00\00\00\00\00\c8\86@\00\00\00\00\00\d0\86@\00\00\00\00\00\d8\86@\00\00\00\00\00\e0\86@\00\00\00\00\00\e8\86@\00\00\00\00\00\f0\86@\00\00\00\00\00\f8\86@\00\00\00\00\00\00\87@\00\00\00\00\00\08\87@\00\00\00\00\00\10\87@\00\00\00\00\00\18\87@\00\00\00\00\00 \87@\00\00\00\00\00(\87@\00\00\00\00\000\87@\00\00\00\00\008\87@\00\00\00\00\00@\87@\00\00\00\00\00H\87@\00\00\00\00\00P\87@\00\00\00\00\00X\87@\00\00\00\00\00`\87@\00\00\00\00\00h\87@\00\00\00\00\00p\87@\00\00\00\00\00x\87@\00\00\00\00\00\80\87@\00\00\00\00\00\88\87@\00\00\00\00\00\90\87@\00\00\00\00\00\98\87@\00\00\00\00\00\a0\87@\00\00\00\00\00\a8\87@\00\00\00\00\00\b0\87@\00\00\00\00\00\b8\87@\00\00\00\00\00\c0\87@\00\00\00\00\00\c8\87@\00\00\00\00\00\d0\87@\00\00\00\00\00\d8\87@\00\00\00\00\00\e0\87@\00\00\00\00\00\e8\87@\00\00\00\00\00\f0\87@\00\00\00\00\00\f8\87@\00\00\00\00\00\00\88@\00\00\00\00\00\08\88@\00\00\00\00\00\10\88@\00\00\00\00\00\18\88@\00\00\00\00\00 \88@\00\00\00\00\00(\88@\00\00\00\00\000\88@\00\00\00\00\008\88@\00\00\00\00\00@\88@\00\00\00\00\00H\88@\00\00\00\00\00P\88@\00\00\00\00\00X\88@\00\00\00\00\00`\88@\00\00\00\00\00h\88@\00\00\00\00\00p\88@\00\00\00\00\00x\88@\00\00\00\00\00\80\88@\00\00\00\00\00\88\88@\00\00\00\00\00\90\88@\00\00\00\00\00\98\88@\00\00\00\00\00\a0\88@\00\00\00\00\00\a8\88@\00\00\00\00\00\b0\88@\00\00\00\00\00\b8\88@\00\00\00\00\00\c0\88@\00\00\00\00\00\c8\88@\00\00\00\00\00\d0\88@\00\00\00\00\00\d8\88@\00\00\00\00\00\e0\88@\00\00\00\00\00\e8\88@\00\00\00\00\00\f0\88@\00\00\00\00\00\f8\88@\00\00\00\00\00\00\89@\00\00\00\00\00\08\89@\00\00\00\00\00\10\89@\00\00\00\00\00\18\89@\00\00\00\00\00 \89@\00\00\00\00\00(\89@\00\00\00\00\000\89@\00\00\00\00\008\89@\00\00\00\00\00@\89@\00\00\00\00\00H\89@\00\00\00\00\00P\89@\00\00\00\00\00X\89@\00\00\00\00\00`\89@\00\00\00\00\00h\89@\00\00\00\00\00p\89@\00\00\00\00\00x\89@\00\00\00\00\00\80\89@\00\00\00\00\00\88\89@\00\00\00\00\00\90\89@\00\00\00\00\00\98\89@\00\00\00\00\00\a0\89@\00\00\00\00\00\a8\89@\00\00\00\00\00\b0\89@\00\00\00\00\00\b8\89@\00\00\00\00\00\c0\89@\00\00\00\00\00\c8\89@\00\00\00\00\00\d0\89@\00\00\00\00\00\d8\89@\00\00\00\00\00\e0\89@\00\00\00\00\00\e8\89@\00\00\00\00\00\f0\89@\00\00\00\00\00\f8\89@\00\00\00\00\00\00\8a@\00\00\00\00\00\08\8a@\00\00\00\00\00\10\8a@\00\00\00\00\00\18\8a@\00\00\00\00\00 \8a@\00\00\00\00\00(\8a@\00\00\00\00\000\8a@\00\00\00\00\008\8a@\00\00\00\00\00@\8a@\00\00\00\00\00H\8a@\00\00\00\00\00P\8a@\00\00\00\00\00X\8a@\00\00\00\00\00`\8a@\00\00\00\00\00h\8a@\00\00\00\00\00p\8a@\00\00\00\00\00x\8a@\00\00\00\00\00\80\8a@\00\00\00\00\00\88\8a@\00\00\00\00\00\90\8a@\00\00\00\00\00\98\8a@\00\00\00\00\00\a0\8a@\00\00\00\00\00\a8\8a@\00\00\00\00\00\b0\8a@\00\00\00\00\00\b8\8a@\00\00\00\00\00\c0\8a@\00\00\00\00\00\c8\8a@\00\00\00\00\00\d0\8a@\00\00\00\00\00\d8\8a@\00\00\00\00\00\e0\8a@\00\00\00\00\00\e8\8a@\00\00\00\00\00\f0\8a@\00\00\00\00\00\f8\8a@\00\00\00\00\00\00\8b@\00\00\00\00\00\08\8b@\00\00\00\00\00\10\8b@\00\00\00\00\00\18\8b@\00\00\00\00\00 \8b@\00\00\00\00\00(\8b@\00\00\00\00\000\8b@\00\00\00\00\008\8b@\00\00\00\00\00@\8b@\00\00\00\00\00H\8b@\00\00\00\00\00P\8b@\00\00\00\00\00X\8b@\00\00\00\00\00`\8b@\00\00\00\00\00h\8b@\00\00\00\00\00p\8b@\00\00\00\00\00x\8b@\00\00\00\00\00\80\8b@\00\00\00\00\00\88\8b@\00\00\00\00\00\90\8b@\00\00\00\00\00\98\8b@\00\00\00\00\00\a0\8b@\00\00\00\00\00\a8\8b@\00\00\00\00\00\b0\8b@\00\00\00\00\00\b8\8b@\00\00\00\00\00\c0\8b@\00\00\00\00\00\c8\8b@\00\00\00\00\00\d0\8b@\00\00\00\00\00\d8\8b@\00\00\00\00\00\e0\8b@\00\00\00\00\00\e8\8b@\00\00\00\00\00\f0\8b@\00\00\00\00\00\f8\8b@\00\00\00\00\00\00\8c@\00\00\00\00\00\08\8c@\00\00\00\00\00\10\8c@\00\00\00\00\00\18\8c@\00\00\00\00\00 \8c@\00\00\00\00\00(\8c@\00\00\00\00\000\8c@\00\00\00\00\008\8c@\00\00\00\00\00@\8c@\00\00\00\00\00H\8c@\00\00\00\00\00P\8c@\00\00\00\00\00X\8c@\00\00\00\00\00`\8c@\00\00\00\00\00h\8c@\00\00\00\00\00p\8c@\00\00\00\00\00x\8c@\00\00\00\00\00\80\8c@\00\00\00\00\00\88\8c@\00\00\00\00\00\90\8c@\00\00\00\00\00\98\8c@\00\00\00\00\00\a0\8c@\00\00\00\00\00\a8\8c@\00\00\00\00\00\b0\8c@\00\00\00\00\00\b8\8c@\00\00\00\00\00\c0\8c@\00\00\00\00\00\c8\8c@\00\00\00\00\00\d0\8c@\00\00\00\00\00\d8\8c@\00\00\00\00\00\e0\8c@\00\00\00\00\00\e8\8c@\00\00\00\00\00\f0\8c@\00\00\00\00\00\f8\8c@\00\00\00\00\00\00\8d@\00\00\00\00\00\08\8d@\00\00\00\00\00\10\8d@\00\00\00\00\00\18\8d@\00\00\00\00\00 \8d@\00\00\00\00\00(\8d@\00\00\00\00\000\8d@\00\00\00\00\008\8d@\00\00\00\00\00@\8d@\00\00\00\00\00H\8d@\00\00\00\00\00P\8d@\00\00\00\00\00X\8d@\00\00\00\00\00`\8d@\00\00\00\00\00h\8d@\00\00\00\00\00p\8d@\00\00\00\00\00x\8d@\00\00\00\00\00\80\8d@\00\00\00\00\00\88\8d@\00\00\00\00\00\90\8d@\00\00\00\00\00\98\8d@\00\00\00\00\00\a0\8d@\00\00\00\00\00\a8\8d@\00\00\00\00\00\b0\8d@\00\00\00\00\00\b8\8d@\00\00\00\00\00\c0\8d@\00\00\00\00\00\c8\8d@\00\00\00\00\00\d0\8d@\00\00\00\00\00\d8\8d@\00\00\00\00\00\e0\8d@\00\00\00\00\00\e8\8d@\00\00\00\00\00\f0\8d@\00\00\00\00\00\f8\8d@\00\00\00\00\00\00\8e@\00\00\00\00\00\08\8e@\00\00\00\00\00\10\8e@\00\00\00\00\00\18\8e@\00\00\00\00\00 \8e@\00\00\00\00\00(\8e@\00\00\00\00\000\8e@\00\00\00\00\008\8e@\00\00\00\00\00@\8e@\00\00\00\00\00H\8e@\00\00\00\00\00P\8e@\00\00\00\00\00X\8e@\00\00\00\00\00`\8e@\00\00\00\00\00h\8e@\00\00\00\00\00p\8e@\00\00\00\00\00x\8e@\00\00\00\00\00\80\8e@\00\00\00\00\00\88\8e@\00\00\00\00\00\90\8e@\00\00\00\00\00\98\8e@\00\00\00\00\00\a0\8e@\00\00\00\00\00\a8\8e@\00\00\00\00\00\b0\8e@\00\00\00\00\00\b8\8e@\00\00\00\00\00\c0\8e@\00\00\00\00\00\c8\8e@\00\00\00\00\00\d0\8e@\00\00\00\00\00\d8\8e@\00\00\00\00\00\e0\8e@\00\00\00\00\00\e8\8e@\00\00\00\00\00\f0\8e@\00\00\00\00\00\f8\8e@\00\00\00\00\00\00\8f@\00\00\00\00\00\08\8f@\00\00\00\00\00\10\8f@\00\00\00\00\00\18\8f@\00\00\00\00\00 \8f@\00\00\00\00\00(\8f@\00\00\00\00\000\8f@\00\00\00\00\008\8f@")
 (data (i32.const 9068) "<")
 (data (i32.const 9080) "\01\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e")
 (data (i32.const 9132) "<")
 (data (i32.const 9144) "\01\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s")
 (data (i32.const 9260) "<")
 (data (i32.const 9272) "\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e")
 (data (i32.const 9324) ",")
 (data (i32.const 9336) "\01\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s")
 (data (i32.const 9404) "<")
 (data (i32.const 9416) "\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s")
 (data (i32.const 9468) ",")
 (data (i32.const 9480) "\01\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s")
 (data (i32.const 9520) "\05\00\00\00 \00\00\00\00\00\00\00 ")
 (data (i32.const 9548) "\02\1a\00\00\00\00\00\00\02\t")
 (export "binarySearch" (func $assembly/index/binarySearch))
 (export "memory" (memory $0))
 (start $~start)
 (func $~lib/rt/itcms/initLazy (param $0 i32) (result i32)
  local.get $0
  local.get $0
  i32.store offset=4
  local.get $0
  local.get $0
  i32.store offset=8
  local.get $0
 )
 (func $~lib/rt/itcms/visitRoots
  (local $0 i32)
  (local $1 i32)
  i32.const 9280
  call $~lib/rt/itcms/__visit
  i32.const 9088
  call $~lib/rt/itcms/__visit
  global.get $~lib/rt/itcms/pinSpace
  local.tee $1
  i32.load offset=4
  i32.const -4
  i32.and
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.ne
   if
    local.get $0
    i32.load offset=4
    i32.const 3
    i32.and
    i32.const 3
    i32.ne
    if
     i32.const 0
     i32.const 9152
     i32.const 159
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 20
    i32.add
    call $~lib/rt/__visit_members
    local.get $0
    i32.load offset=4
    i32.const -4
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  local.get $0
  i32.load offset=4
  i32.const -4
  i32.and
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/itcms/Object#set:next (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/itcms/Object#linkTo (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  i32.load offset=8
  local.set $3
  local.get $0
  local.get $1
  local.get $2
  i32.or
  i32.store offset=4
  local.get $0
  local.get $3
  i32.store offset=8
  local.get $3
  local.get $0
  call $~lib/rt/itcms/Object#set:next
  local.get $1
  local.get $0
  i32.store offset=8
 )
 (func $~lib/rt/itcms/Object#makeGray (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 9152
    i32.const 147
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   global.set $~lib/rt/itcms/iter
  end
  block $__inlined_func$~lib/rt/itcms/Object#unlink
   local.get $0
   i32.load offset=4
   i32.const -4
   i32.and
   local.tee $1
   i32.eqz
   if
    i32.const 0
    local.get $0
    i32.const 25948
    i32.lt_u
    local.get $0
    i32.load offset=8
    select
    i32.eqz
    if
     i32.const 0
     i32.const 9152
     i32.const 127
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    br $__inlined_func$~lib/rt/itcms/Object#unlink
   end
   local.get $0
   i32.load offset=8
   local.tee $2
   i32.eqz
   if
    i32.const 0
    i32.const 9152
    i32.const 131
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $2
   local.get $1
   call $~lib/rt/itcms/Object#set:next
  end
  local.get $0
  global.get $~lib/rt/itcms/toSpace
  local.get $0
  i32.load offset=12
  local.tee $1
  i32.const 1
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 9520
   i32.load
   i32.gt_u
   if
    i32.const 9280
    i32.const 9344
    i32.const 22
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 3
   i32.shl
   i32.const 9524
   i32.add
   i32.load
   i32.const 32
   i32.and
  end
  if (result i32)
   global.get $~lib/rt/itcms/white
   i32.eqz
  else
   i32.const 2
  end
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/itcms/__visit (param $0 i32)
  local.get $0
  i32.eqz
  if
   return
  end
  global.get $~lib/rt/itcms/white
  local.get $0
  i32.const 20
  i32.sub
  local.tee $0
  i32.load offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 9424
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 9424
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 256
  i32.lt_u
  if
   local.get $2
   i32.const 4
   i32.shr_u
   local.set $2
  else
   i32.const 31
   local.get $2
   i32.const 1073741820
   local.get $2
   i32.const 1073741820
   i32.lt_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.set $3
   local.get $2
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $2
   local.get $3
   i32.const 7
   i32.sub
   local.set $3
  end
  local.get $2
  i32.const 16
  i32.lt_u
  i32.const 0
  local.get $3
  i32.const 23
  i32.lt_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 9424
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=8
  local.set $4
  local.get $1
  i32.load offset=4
  local.tee $5
  if
   local.get $5
   local.get $4
   i32.store offset=8
  end
  local.get $4
  if
   local.get $4
   local.get $5
   i32.store offset=4
  end
  local.get $1
  local.get $0
  local.get $2
  local.get $3
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  i32.eq
  if
   local.get $0
   local.get $2
   local.get $3
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $4
   i32.store offset=96
   local.get $4
   i32.eqz
   if
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    local.tee $4
    i32.load offset=4
    i32.const -2
    local.get $2
    i32.rotl
    i32.and
    local.set $1
    local.get $4
    local.get $1
    i32.store offset=4
    local.get $1
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load
     i32.const -2
     local.get $3
     i32.rotl
     i32.and
     i32.store
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 9424
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 9424
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.add
  local.tee $4
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  if
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $3
   i32.const 4
   i32.add
   local.get $2
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.tee $4
   i32.load
   local.set $2
  end
  local.get $3
  i32.const 2
  i32.and
  if
   local.get $1
   i32.const 4
   i32.sub
   i32.load
   local.tee $1
   i32.load
   local.tee $6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 9424
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $6
   i32.const 4
   i32.add
   local.get $3
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store
  end
  local.get $4
  local.get $2
  i32.const 2
  i32.or
  i32.store
  local.get $3
  i32.const -4
  i32.and
  local.tee $3
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 9424
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $3
  local.get $1
  i32.const 4
  i32.add
  i32.add
  i32.ne
  if
   i32.const 0
   i32.const 9424
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store
  local.get $3
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $3
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   local.get $3
   i32.const 1073741820
   local.get $3
   i32.const 1073741820
   i32.lt_u
   select
   local.tee $3
   i32.clz
   i32.sub
   local.tee $4
   i32.const 7
   i32.sub
   local.set $5
   local.get $3
   local.get $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $3
  i32.const 16
  i32.lt_u
  i32.const 0
  local.get $5
  i32.const 23
  i32.lt_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 9424
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $3
  local.get $5
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  local.set $4
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  local.get $4
  i32.store offset=8
  local.get $4
  if
   local.get $4
   local.get $1
   i32.store offset=4
  end
  local.get $0
  local.get $3
  local.get $5
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store offset=96
  local.get $0
  local.get $0
  i32.load
  i32.const 1
  local.get $5
  i32.shl
  i32.or
  i32.store
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  local.tee $0
  local.get $0
  i32.load offset=4
  i32.const 1
  local.get $3
  i32.shl
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.get $2
  i32.gt_u
  if
   i32.const 0
   i32.const 9424
   i32.const 377
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $2
  i32.const -16
  i32.and
  local.get $0
  i32.load offset=1568
  local.tee $2
  if
   local.get $1
   local.get $2
   i32.const 4
   i32.add
   i32.lt_u
   if
    i32.const 0
    i32.const 9424
    i32.const 384
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   local.get $1
   i32.const 16
   i32.sub
   i32.eq
   if
    local.get $2
    i32.load
    local.set $4
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
   end
  else
   local.get $1
   local.get $0
   i32.const 1572
   i32.add
   i32.lt_u
   if
    i32.const 0
    i32.const 9424
    i32.const 397
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $1
  i32.sub
  local.tee $2
  i32.const 20
  i32.lt_u
  if
   return
  end
  local.get $1
  local.get $4
  i32.const 2
  i32.and
  local.get $2
  i32.const 8
  i32.sub
  local.tee $2
  i32.const 1
  i32.or
  i32.or
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $2
  local.get $1
  i32.const 4
  i32.add
  i32.add
  local.tee $2
  i32.const 2
  i32.store
  local.get $0
  local.get $2
  i32.store offset=1568
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  memory.size
  local.tee $0
  i32.const 1
  i32.lt_s
  if (result i32)
   i32.const 1
   local.get $0
   i32.sub
   memory.grow
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  i32.const 25952
  i32.const 0
  i32.store
  i32.const 27520
  i32.const 0
  i32.store
  loop $for-loop|0
   local.get $1
   i32.const 23
   i32.lt_u
   if
    local.get $1
    i32.const 2
    i32.shl
    i32.const 25952
    i32.add
    i32.const 0
    i32.store offset=4
    i32.const 0
    local.set $0
    loop $for-loop|1
     local.get $0
     i32.const 16
     i32.lt_u
     if
      local.get $0
      local.get $1
      i32.const 4
      i32.shl
      i32.add
      i32.const 2
      i32.shl
      i32.const 25952
      i32.add
      i32.const 0
      i32.store offset=96
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|1
     end
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  i32.const 25952
  i32.const 27524
  memory.size
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  i32.const 25952
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  block $folding-inner0
   block $break|0
    block $case2|0
     block $case1|0
      block $case0|0
       global.get $~lib/rt/itcms/state
       br_table $case0|0 $case1|0 $case2|0 $break|0
      end
      i32.const 1
      global.set $~lib/rt/itcms/state
      i32.const 0
      global.set $~lib/rt/itcms/visitCount
      call $~lib/rt/itcms/visitRoots
      global.get $~lib/rt/itcms/toSpace
      global.set $~lib/rt/itcms/iter
      br $folding-inner0
     end
     global.get $~lib/rt/itcms/white
     i32.eqz
     local.set $1
     global.get $~lib/rt/itcms/iter
     i32.load offset=4
     i32.const -4
     i32.and
     local.set $0
     loop $while-continue|1
      local.get $0
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $0
       global.set $~lib/rt/itcms/iter
       local.get $1
       local.get $0
       i32.load offset=4
       i32.const 3
       i32.and
       i32.ne
       if
        local.get $0
        local.get $1
        call $~lib/rt/itcms/Object#set:color
        i32.const 0
        global.set $~lib/rt/itcms/visitCount
        local.get $0
        i32.const 20
        i32.add
        call $~lib/rt/__visit_members
        br $folding-inner0
       end
       local.get $0
       i32.load offset=4
       i32.const -4
       i32.and
       local.set $0
       br $while-continue|1
      end
     end
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.get $~lib/rt/itcms/iter
     i32.load offset=4
     i32.const -4
     i32.and
     i32.eq
     if
      global.get $~lib/memory/__stack_pointer
      local.set $0
      loop $while-continue|0
       local.get $0
       i32.const 25948
       i32.lt_u
       if
        local.get $0
        i32.load
        call $~lib/rt/itcms/__visit
        local.get $0
        i32.const 4
        i32.add
        local.set $0
        br $while-continue|0
       end
      end
      global.get $~lib/rt/itcms/iter
      i32.load offset=4
      i32.const -4
      i32.and
      local.set $0
      loop $while-continue|2
       local.get $0
       global.get $~lib/rt/itcms/toSpace
       i32.ne
       if
        local.get $1
        local.get $0
        i32.load offset=4
        i32.const 3
        i32.and
        i32.ne
        if
         local.get $0
         local.get $1
         call $~lib/rt/itcms/Object#set:color
         local.get $0
         i32.const 20
         i32.add
         call $~lib/rt/__visit_members
        end
        local.get $0
        i32.load offset=4
        i32.const -4
        i32.and
        local.set $0
        br $while-continue|2
       end
      end
      global.get $~lib/rt/itcms/fromSpace
      local.set $0
      global.get $~lib/rt/itcms/toSpace
      global.set $~lib/rt/itcms/fromSpace
      local.get $0
      global.set $~lib/rt/itcms/toSpace
      local.get $1
      global.set $~lib/rt/itcms/white
      local.get $0
      i32.load offset=4
      i32.const -4
      i32.and
      global.set $~lib/rt/itcms/iter
      i32.const 2
      global.set $~lib/rt/itcms/state
     end
     br $folding-inner0
    end
    global.get $~lib/rt/itcms/iter
    local.tee $0
    global.get $~lib/rt/itcms/toSpace
    i32.ne
    if
     local.get $0
     i32.load offset=4
     i32.const -4
     i32.and
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/white
     i32.eqz
     local.get $0
     i32.load offset=4
     i32.const 3
     i32.and
     i32.ne
     if
      i32.const 0
      i32.const 9152
      i32.const 228
      i32.const 20
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i32.const 25948
     i32.lt_u
     if
      local.get $0
      i32.const 0
      i32.store offset=4
      local.get $0
      i32.const 0
      i32.store offset=8
     else
      global.get $~lib/rt/itcms/total
      local.get $0
      i32.load
      i32.const -4
      i32.and
      i32.const 4
      i32.add
      i32.sub
      global.set $~lib/rt/itcms/total
      local.get $0
      i32.const 4
      i32.add
      local.tee $1
      i32.const 25948
      i32.ge_u
      if
       global.get $~lib/rt/tlsf/ROOT
       i32.eqz
       if
        call $~lib/rt/tlsf/initialize
       end
       global.get $~lib/rt/tlsf/ROOT
       local.get $1
       i32.const 4
       i32.sub
       local.set $0
       local.get $1
       i32.const 15
       i32.and
       i32.eqz
       i32.const 0
       local.get $1
       select
       if (result i32)
        local.get $0
        i32.load
        i32.const 1
        i32.and
        i32.eqz
       else
        i32.const 0
       end
       i32.eqz
       if
        i32.const 0
        i32.const 9424
        i32.const 559
        i32.const 3
        call $~lib/builtins/abort
        unreachable
       end
       local.get $0
       local.get $0
       i32.load
       i32.const 1
       i32.or
       i32.store
       local.get $0
       call $~lib/rt/tlsf/insertBlock
      end
     end
     i32.const 10
     return
    end
    global.get $~lib/rt/itcms/toSpace
    global.get $~lib/rt/itcms/toSpace
    i32.store offset=4
    global.get $~lib/rt/itcms/toSpace
    global.get $~lib/rt/itcms/toSpace
    i32.store offset=8
    i32.const 0
    global.set $~lib/rt/itcms/state
   end
   i32.const 0
   return
  end
  global.get $~lib/rt/itcms/visitCount
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if
   local.get $1
   i32.const 4
   i32.shr_u
   local.set $1
  else
   i32.const 31
   local.get $1
   i32.const 1
   i32.const 27
   local.get $1
   i32.clz
   i32.sub
   i32.shl
   i32.add
   i32.const 1
   i32.sub
   local.get $1
   local.get $1
   i32.const 536870910
   i32.lt_u
   select
   local.tee $1
   i32.clz
   i32.sub
   local.set $2
   local.get $1
   local.get $2
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $1
   local.get $2
   i32.const 7
   i32.sub
   local.set $2
  end
  local.get $1
  i32.const 16
  i32.lt_u
  i32.const 0
  local.get $2
  i32.const 23
  i32.lt_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 9424
   i32.const 330
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const -1
  local.get $1
  i32.shl
  i32.and
  local.tee $1
  if (result i32)
   local.get $0
   local.get $1
   i32.ctz
   local.get $2
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
  else
   local.get $0
   i32.load
   i32.const -1
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.tee $1
   if (result i32)
    local.get $0
    local.get $1
    i32.ctz
    local.tee $1
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.tee $2
    i32.eqz
    if
     i32.const 0
     i32.const 9424
     i32.const 343
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.ctz
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=96
   else
    i32.const 0
   end
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i32.const 1073741820
  i32.ge_u
  if
   i32.const 9088
   i32.const 9424
   i32.const 458
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 12
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.get $1
  i32.const 12
  i32.le_u
  select
  local.tee $2
  call $~lib/rt/tlsf/searchBlock
  local.tee $1
  i32.eqz
  if
   i32.const 4
   memory.size
   local.tee $1
   i32.const 16
   i32.shl
   i32.const 4
   i32.sub
   local.get $0
   i32.load offset=1568
   i32.ne
   i32.shl
   local.get $2
   i32.const 1
   i32.const 27
   local.get $2
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.get $2
   local.get $2
   i32.const 536870910
   i32.lt_u
   select
   i32.add
   i32.const 65535
   i32.add
   i32.const -65536
   i32.and
   i32.const 16
   i32.shr_u
   local.set $3
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.gt_s
   select
   memory.grow
   i32.const 0
   i32.lt_s
   if
    local.get $3
    memory.grow
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
   local.get $0
   local.get $1
   i32.const 16
   i32.shl
   memory.size
   i32.const 16
   i32.shl
   call $~lib/rt/tlsf/addMemory
   local.get $0
   local.get $2
   call $~lib/rt/tlsf/searchBlock
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 9424
    i32.const 496
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.gt_u
  if
   i32.const 0
   i32.const 9424
   i32.const 498
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/removeBlock
  local.get $1
  i32.load
  local.set $3
  local.get $2
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  if
   i32.const 0
   i32.const 9424
   i32.const 357
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const -4
  i32.and
  local.get $2
  i32.sub
  local.tee $4
  i32.const 16
  i32.ge_u
  if
   local.get $1
   local.get $2
   local.get $3
   i32.const 2
   i32.and
   i32.or
   i32.store
   local.get $2
   local.get $1
   i32.const 4
   i32.add
   i32.add
   local.tee $2
   local.get $4
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   i32.store
   local.get $0
   local.get $2
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $1
   local.get $3
   i32.const -2
   i32.and
   i32.store
   local.get $1
   i32.const 4
   i32.add
   local.tee $0
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.get $0
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   i32.load
   i32.const -3
   i32.and
   i32.store
  end
  local.get $1
 )
 (func $~lib/memory/memory.fill (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $~lib/util/memory/memset|inlined.0
   local.get $1
   i32.eqz
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store8
   local.get $0
   local.get $1
   i32.add
   local.tee $2
   i32.const 1
   i32.sub
   i32.const 0
   i32.store8
   local.get $1
   i32.const 2
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store8 offset=1
   local.get $0
   i32.const 0
   i32.store8 offset=2
   local.get $2
   i32.const 2
   i32.sub
   i32.const 0
   i32.store8
   local.get $2
   i32.const 3
   i32.sub
   i32.const 0
   i32.store8
   local.get $1
   i32.const 6
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store8 offset=3
   local.get $2
   i32.const 4
   i32.sub
   i32.const 0
   i32.store8
   local.get $1
   i32.const 8
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   local.get $0
   i32.sub
   i32.const 3
   i32.and
   local.tee $2
   i32.add
   local.tee $0
   i32.const 0
   i32.store
   local.get $0
   local.get $1
   local.get $2
   i32.sub
   i32.const -4
   i32.and
   local.tee $2
   i32.add
   local.tee $1
   i32.const 4
   i32.sub
   i32.const 0
   i32.store
   local.get $2
   i32.const 8
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $1
   i32.const 12
   i32.sub
   i32.const 0
   i32.store
   local.get $1
   i32.const 8
   i32.sub
   i32.const 0
   i32.store
   local.get $2
   i32.const 24
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.store offset=20
   local.get $0
   i32.const 0
   i32.store offset=24
   local.get $1
   i32.const 28
   i32.sub
   i32.const 0
   i32.store
   local.get $1
   i32.const 24
   i32.sub
   i32.const 0
   i32.store
   local.get $1
   i32.const 20
   i32.sub
   i32.const 0
   i32.store
   local.get $1
   i32.const 16
   i32.sub
   i32.const 0
   i32.store
   local.get $0
   local.get $0
   i32.const 4
   i32.and
   i32.const 24
   i32.add
   local.tee $1
   i32.add
   local.set $0
   local.get $2
   local.get $1
   i32.sub
   local.set $1
   loop $while-continue|0
    local.get $1
    i32.const 32
    i32.ge_u
    if
     local.get $0
     i64.const 0
     i64.store
     local.get $0
     i64.const 0
     i64.store offset=8
     local.get $0
     i64.const 0
     i64.store offset=16
     local.get $0
     i64.const 0
     i64.store offset=24
     local.get $1
     i32.const 32
     i32.sub
     local.set $1
     local.get $0
     i32.const 32
     i32.add
     local.set $0
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/rt/itcms/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 9088
   i32.const 9152
   i32.const 260
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   block $__inlined_func$~lib/rt/itcms/interrupt
    i32.const 2048
    local.set $2
    loop $do-continue|0
     local.get $2
     call $~lib/rt/itcms/step
     i32.sub
     local.set $2
     global.get $~lib/rt/itcms/state
     i32.eqz
     if
      global.get $~lib/rt/itcms/total
      i64.extend_i32_u
      i64.const 200
      i64.mul
      i64.const 100
      i64.div_u
      i32.wrap_i64
      i32.const 1024
      i32.add
      global.set $~lib/rt/itcms/threshold
      br $__inlined_func$~lib/rt/itcms/interrupt
     end
     local.get $2
     i32.const 0
     i32.gt_s
     br_if $do-continue|0
    end
    global.get $~lib/rt/itcms/total
    global.get $~lib/rt/itcms/total
    global.get $~lib/rt/itcms/threshold
    i32.sub
    i32.const 1024
    i32.lt_u
    i32.const 10
    i32.shl
    i32.add
    global.set $~lib/rt/itcms/threshold
   end
  end
  local.get $0
  i32.const 16
  i32.add
  local.set $2
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $2
  call $~lib/rt/tlsf/allocateBlock
  local.tee $2
  local.get $1
  i32.store offset=12
  local.get $2
  local.get $0
  i32.store offset=16
  local.get $2
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $2
  i32.load
  i32.const -4
  i32.and
  i32.const 4
  i32.add
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $2
  i32.const 20
  i32.add
  local.tee $1
  local.get $0
  call $~lib/memory/memory.fill
  local.get $1
 )
 (func $~lib/memory/memory.copy (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 1056
  local.set $3
  i32.const 8000
  local.set $4
  block $~lib/util/memory/memmove|inlined.0
   local.get $0
   i32.const 1056
   i32.eq
   br_if $~lib/util/memory/memmove|inlined.0
   local.get $0
   i32.const 1056
   i32.lt_u
   if
    local.get $0
    i32.const 7
    i32.and
    i32.eqz
    if
     loop $while-continue|0
      local.get $0
      i32.const 7
      i32.and
      if
       local.get $4
       i32.eqz
       br_if $~lib/util/memory/memmove|inlined.0
       local.get $4
       i32.const 1
       i32.sub
       local.set $4
       local.get $0
       local.tee $2
       i32.const 1
       i32.add
       local.set $0
       local.get $3
       local.tee $1
       i32.const 1
       i32.add
       local.set $3
       local.get $2
       local.get $1
       i32.load8_u
       i32.store8
       br $while-continue|0
      end
     end
     loop $while-continue|1
      local.get $4
      i32.const 8
      i32.ge_u
      if
       local.get $0
       local.get $3
       i64.load
       i64.store
       local.get $4
       i32.const 8
       i32.sub
       local.set $4
       local.get $0
       i32.const 8
       i32.add
       local.set $0
       local.get $3
       i32.const 8
       i32.add
       local.set $3
       br $while-continue|1
      end
     end
    end
    loop $while-continue|2
     local.get $4
     if
      local.get $0
      local.tee $2
      i32.const 1
      i32.add
      local.set $0
      local.get $3
      local.tee $1
      i32.const 1
      i32.add
      local.set $3
      local.get $2
      local.get $1
      i32.load8_u
      i32.store8
      local.get $4
      i32.const 1
      i32.sub
      local.set $4
      br $while-continue|2
     end
    end
   else
    local.get $0
    i32.const 7
    i32.and
    i32.eqz
    if
     loop $while-continue|3
      local.get $0
      local.get $4
      i32.add
      i32.const 7
      i32.and
      if
       local.get $4
       i32.eqz
       br_if $~lib/util/memory/memmove|inlined.0
       local.get $0
       local.get $4
       i32.const 1
       i32.sub
       local.tee $4
       i32.add
       local.get $4
       i32.const 1056
       i32.add
       i32.load8_u
       i32.store8
       br $while-continue|3
      end
     end
     loop $while-continue|4
      local.get $4
      i32.const 8
      i32.ge_u
      if
       local.get $0
       local.get $4
       i32.const 8
       i32.sub
       local.tee $4
       i32.add
       local.get $4
       i32.const 1056
       i32.add
       i64.load
       i64.store
       br $while-continue|4
      end
     end
    end
    loop $while-continue|5
     local.get $4
     if
      local.get $0
      local.get $4
      i32.const 1
      i32.sub
      local.tee $4
      i32.add
      local.get $4
      i32.const 1056
      i32.add
      i32.load8_u
      i32.store8
      br $while-continue|5
     end
    end
   end
  end
 )
 (func $~lib/array/Array<f64>#__get (param $0 i32) (param $1 i32) (result f64)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 9280
   i32.const 9488
   i32.const 92
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load
 )
 (func $assembly/index/search (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result f64)
  (local $4 i32)
  local.get $2
  local.get $3
  i32.le_s
  if
   local.get $0
   local.get $2
   local.get $3
   local.get $2
   i32.sub
   i32.const 2
   i32.div_s
   i32.add
   local.tee $4
   call $~lib/array/Array<f64>#__get
   local.get $1
   f64.convert_i32_s
   f64.eq
   if
    local.get $4
    f64.convert_i32_s
    return
   end
   local.get $0
   local.get $4
   call $~lib/array/Array<f64>#__get
   local.get $1
   f64.convert_i32_s
   f64.gt
   if
    local.get $0
    local.get $1
    local.get $2
    local.get $4
    i32.const 1
    i32.sub
    call $assembly/index/search
    return
   end
   local.get $0
   local.get $1
   local.get $4
   i32.const 1
   i32.add
   local.get $3
   call $assembly/index/search
   return
  end
  f64.const -1
 )
 (func $assembly/index/binarySearch
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8000
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $1
  call $~lib/memory/memory.copy
  local.get $1
  i32.store
  i32.const 16
  i32.const 3
  call $~lib/rt/itcms/__new
  local.tee $0
  local.get $1
  i32.store
  local.get $1
  if
   local.get $0
   i32.eqz
   if
    i32.const 0
    i32.const 9152
    i32.const 294
    i32.const 14
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/rt/itcms/white
   local.get $1
   i32.const 20
   i32.sub
   local.tee $3
   i32.load offset=4
   i32.const 3
   i32.and
   i32.eq
   if
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=4
    i32.const 3
    i32.and
    local.tee $5
    local.set $6
    local.get $5
    global.get $~lib/rt/itcms/white
    i32.eqz
    i32.eq
    if
     local.get $3
     call $~lib/rt/itcms/Object#makeGray
    else
     global.get $~lib/rt/itcms/state
     i32.const 1
     i32.eq
     i32.const 0
     local.get $6
     i32.const 3
     i32.eq
     select
     if
      local.get $3
      call $~lib/rt/itcms/Object#makeGray
     end
    end
   end
  end
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  i32.const 8000
  i32.store offset=8
  local.get $0
  i32.const 1000
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  loop $for-loop|0
   local.get $2
   i32.const 1000
   i32.lt_s
   if
    local.get $0
    local.get $2
    i32.const 0
    i32.const 999
    call $assembly/index/search
    drop
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/rt/__visit_members (param $0 i32)
  block $folding-inner0
   block $invalid
    block $~lib/arraybuffer/ArrayBufferView
     block $~lib/string/String
      block $~lib/arraybuffer/ArrayBuffer
       local.get $0
       i32.const 8
       i32.sub
       i32.load
       br_table $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $folding-inner0 $folding-inner0 $invalid
      end
      return
     end
     return
    end
    local.get $0
    i32.load
    local.tee $0
    if
     local.get $0
     call $~lib/rt/itcms/__visit
    end
    return
   end
   unreachable
  end
  local.get $0
  i32.load
  call $~lib/rt/itcms/__visit
 )
 (func $~start
  memory.size
  i32.const 16
  i32.shl
  i32.const 25948
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 9200
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 9232
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 9376
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
 )
 (func $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 9564
  i32.lt_s
  if
   i32.const 25968
   i32.const 26016
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
 )
)
