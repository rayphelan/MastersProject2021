@article{Haas2017,
abstract = {The maturation of the Web platform has given rise to sophisticated and demanding Web applications such as interactive 3D visualization, audio and video software, and games. With that, efficiency and security of code on the Web has become more important than ever. Yet JavaScript as the only built-in language of the Web is not well-equipped to meet these requirements, especially as a compilation target. Engineers from the four major browser vendors have risen to the challenge and collaboratively designed a portable low-level bytecode called WebAssembly. It offers compact representation, efficient validation and compilation, and safe low to no-overhead execution. Rather than committing to a specific programming model, WebAssembly is an abstraction over modern hardware, making it language-, hardware-, and platform-independent, with use cases beyond just the Web. WebAssembly has been designed with a formal semantics from the start. We describe the motivation, design and formal semantics of WebAssembly and provide some preliminary experience with implementations.},
author = {Haas, Andreas and Rossberg, Andreas and Schuff, Derek L. and Titzer, Ben L. and Holman, Michael and Gohman, Dan and Wagner, Luke and Zakai, Alon and Bastien, J. F.},
doi = {10.1145/3062341.3062363},
file = {:C\:/Users/ray.phelan/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Haas et al. - 2017 - Bringing the web up to speed with WebAssembly.pdf:pdf},
isbn = {9781450349888},
issn = {15232867},
journal = {ACM SIGPLAN Notices},
keywords = {assembly languages,just-in-time compilers,programming languages,type systems,virtual machines},
number = {6},
pages = {185--200},
title = {{Bringing the web up to speed with WebAssembly}},
volume = {52},
year = {2017}
}
