@article{Hall2019,
abstract = {Serverless computing platforms allow developers to host single-purpose applications that automatically scale with demand. In contrast to traditional long-running applications on dedicated, virtualized, or container-based platforms, serverless applications are intended to be instantiated when called, execute a single function, and shut down when finished. State-of-the-art serverless platforms achieve these goals by creating a new container instance to host a function when it is called and destroying the container when it completes. This design allows for cost and resource savings when hosting simple applications, such as those supporting IoT devices at the edge of the network. However, the use of containers introduces some overhead which may be unsuitable for applications requiring low-latency response or hardware platforms with limited resources, such as those served by edge computing environments. In this paper, we present a nomenclature for characterizing server-less function access patterns which allows us to derive the basic requirements of a serverless computing runtime. We then propose the use of WebAssembly as an alternative method for running serverless applications while meeting these requirements. Finally, we demonstrate how a WebAssembly-based serverless platform provides many of the same isolation and performance guarantees of container-based platforms while reducing average application start times and the resources needed to host them.},
author = {Hall, Adam and Ramachandran, Umakishore},
doi = {10.1145/3302505.3310084},
file = {:C\:/Users/ray.phelan/Zotero/storage/U6GGXNW4/Hall and Ramachandran - 2019 - An execution model for serverless functions at the.pdf:pdf},
isbn = {9781450362832},
journal = {IoTDI 2019 - Proceedings of the 2019 Internet of Things Design and Implementation},
keywords = {FaaS,edge computing,fog computing,function-as-a-service,serverless,webassembly},
pages = {225--236},
title = {{An execution model for serverless functions at the edge}},
year = {2019}
}
