@article{Wen2020,
abstract = {WebAssembly is gaining wide adoption in browser-centric applications thanks to its high portability and security. More recently, researchers start exploring the potential of WebAssembly in non-web environments, particularly in IoT and Edge computing. A key challenge of WebAssembly is performance gap with native code: Applications compiled to WebAssembly run slower by an average of 45% as reported by previous benchmark. The main causes of the slowdown are two-folded. Firstly, conventional WebAssembly runtimes translate WebAssembly instructions to native machine code using just-in-time compilers, which do not apply complex code optimization. Secondly, system calls from WebAssembly applications have to be proxy-ed by runtimes in order to reach operating systems, which incurs a significant performance overhead. To address these issues, we present Wasmachine, an OS aiming to efficiently and securely execute WebAssembly applications in IoT and edge devices with constrained resources. Wasmachine achieves efficient execution by compiling WebAssembly ahead of time to native binary and executing it in kernel mode for zero-cost system calls. Even when executing in kernel space, Wasmachine stays secure by exploiting various language features of WebAssembly to deliver software-based fault isolation. We implement the Was-machine prototype in the memory-safe programming language Rust and conduct a performance evaluation. Our results show that WebAssembly applications running in Wasmachine are up to 21% faster than their native counterparts in Linux.},
author = {Wen, Elliott and Weber, Gerald},
doi = {10.1109/CLOUD49709.2020.00056},
file = {:C\:/Users/ray.phelan/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Wen, Weber - 2020 - Wasmachine Bring the edge up to speed with a webassembly OS.pdf:pdf},
isbn = {9781728187808},
issn = {21596190},
journal = {IEEE International Conference on Cloud Computing, CLOUD},
pages = {353--360},
title = {{Wasmachine: Bring the edge up to speed with a webassembly OS}},
volume = {2020-Octob},
year = {2020}
}
