@article{Wang2019,
abstract = {Code obfuscation built upon code virtualization technology is one of the viable means for protecting sensitive algorithms and data against code reverse engineering attacks. Code virtualization has been successfully applied to programming languages like C, C++, and Java. However, it remains an outstanding challenge to apply this promising technique to JavaScript, a popular web programming language. This is primarily due to the open visibility of JavaScript code and the expensive runtime overhead associated with code virtualization. This paper presents JSPro, a novel code virtualization system for JavaScript. JSPro is the first JavaScript code obfuscation tool that builds upon the emerging WebAssembly language standard. It is designed to provide more secure code protection but without incurring a significant runtime penalty, explicitly targeting numerical JavaScript kernels. We achieve this by first automatically translating the target JavaScript code into WebAssembly and then performing code obfuscation on the compiled WebAssembly binary. Our design has two advantages over existing solutions: (1) it increases the code reverse entering complexity by implementing code obfuscation at a lower binary level and (2) it significantly reduces the performance impact of code virtualization over the native JavaScript code by using the performance-tuned WebAssembly language. We evaluate JSPro on a set of numerical JavaScript algorithms widely used in many applications. To test the performance, we apply JSPro to four mainstream web browsers running on three distinct mobile devices. Compared to state-of-the-art JavaScript obfuscation tools, JSPro not only provides stronger protection but also reduces the runtime overhead by at least 15% (up to 38.2%) and the code size by 28.2% on average.},
author = {Wang, Shuai and Fang, Dingyi and Wang, Zheng and Ye, Guixin and Li, Meng and Yuan, Lu and Tang, Zhanyong and Wang, Huanting and Wang, Wei and Wang, Fuwei and Ren, Jie},
doi = {10.1109/ACCESS.2019.2953511},
file = {:C\:/Users/ray.phelan/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Wang et al. - 2019 - Leveraging WebAssembly for Numerical JavaScript Code Virtualization.pdf:pdf},
issn = {21693536},
journal = {IEEE Access},
keywords = {Code obfuscation,javascript,performance,security,webassembly},
pages = {182711--182724},
publisher = {IEEE},
title = {{Leveraging WebAssembly for Numerical JavaScript Code Virtualization}},
volume = {7},
year = {2019}
}
